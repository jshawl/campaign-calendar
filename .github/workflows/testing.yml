name: Testing

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  phpunit:
    name: PHP tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('.wp-env.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ hashFiles('.wp-env.json') }}
            ${{ runner.os }}-buildx-
      - name: Cache wp-env
        uses: actions/cache@v4
        with:
          path: |
            ~/wp-env
            .wp-env/
          key: ${{ runner.os }}-wp-env-${{ hashFiles('.wp-env.json', 'package-lock.json') }}-v3
          restore-keys: |
            ${{ runner.os }}-wp-env-
      - name: Install dependencies
        run: npm ci
      - name: Pre-pull Docker images
        run: |
          echo "Pre-pulling common wp-env images..."
          docker pull wordpress:latest &
          docker pull mariadb:lts &
          docker pull phpmyadmin/phpmyadmin:latest &
          wait
          echo "Image pre-pull completed"

      - name: Start wp-env
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
        run: npm start -- --debug
      - name: Test
        run: npm run test:php

  vitest:
    name: JavaScript tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Run JavaScript tests
        run: npm run test:js
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
      - name: Check versions
        run: bin/check-versions.sh
      - name: Zip
        run: bin/zip.sh
